{
  "name": "modal",
  "dependencies": [
    "@radix-ui/react-alert-dialog"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "name": "modal.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/registry/default/ui/button\"\n\nconst ModalBase = AlertDialogPrimitive.Root\n\nconst Trigger = AlertDialogPrimitive.Trigger\n\nconst Content = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AlertDialogPrimitive.Portal>\n    <AlertDialogPrimitive.Overlay\n      className={cn(\n        \"fixed inset-0 z-50 bg-black/75 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n        className\n      )}\n    />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"group fixed left-1/2 top-1/2 z-50 w-full max-w-[540px] -translate-x-1/2 -translate-y-1/2\",\n\n        className\n      )}\n      {...props}\n    >\n      <div\n        className={cn(\n          \"rounded-xl bg-background-100 shadow-modal transition-all ![animation-duration:350ms] group-data-[state=open]:animate-in group-data-[state=closed]:animate-out group-data-[state=closed]:fade-out-0 group-data-[state=open]:fade-in-0 group-data-[state=closed]:slide-out-to-top-10 group-data-[state=open]:slide-in-from-top-10\"\n        )}\n      >\n        {children}\n      </div>\n    </AlertDialogPrimitive.Content>\n  </AlertDialogPrimitive.Portal>\n))\nContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst Body = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(\"space-y-6 p-6\", className)} {...props} />\n)\nBody.displayName = \"ModalHeader\"\n\nconst Header = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(\"text-center sm:text-left\", className)} {...props} />\n)\nHeader.displayName = \"ModalHeader\"\n\nconst Title = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"mb-6 text-left text-2xl font-semibold text-gray-1000\",\n      className\n    )}\n    {...props}\n  />\n))\nTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst Description = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-base font-normal text-gray-1000\", className)}\n    {...props}\n  />\n))\nDescription.displayName = AlertDialogPrimitive.Description.displayName\n\nconst Actions = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"sticky bottom-0 flex justify-between rounded-b-xl bg-background-200 p-4 [box-shadow:0_-1px_0_0_var(--ds-gray-alpha-400)]\",\n      className\n    )}\n    {...props}\n  />\n)\nActions.displayName = \"ModalActions\"\n\nconst Action = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst Cancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(buttonVariants({ variant: \"secondary\" }), className)}\n    {...props}\n  />\n))\nCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nconst Modal = {\n  Modal: ModalBase,\n  Trigger,\n  Content,\n  Body,\n  Header,\n  Title,\n  Description,\n  Actions,\n  Action,\n  Cancel,\n} as const\n\nexport { Modal }\n"
    }
  ],
  "type": "components:ui"
}
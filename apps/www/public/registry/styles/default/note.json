{
  "name": "note",
  "files": [
    {
      "name": "note.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport {\n  AlertOctagon,\n  AlertTriangleIcon,\n  CheckCircle2,\n  InfoIcon,\n  XIcon,\n} from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst noteVariants = cva(\n  \"border p-2 flex leading-normal justify-between items-center rounded-md gap-3 [word-break:break-word] grow\",\n  {\n    variants: {\n      variant: {\n        secondary:\n          \"text-gray-600 border-gray-300 [--note-filled-bg:var(--ds-gray-alpha-200)] [--note-filled-border:transparent]\",\n        success:\n          \"text-blue-900 border-blue-400 selection:bg-blue-700 [--note-filled-bg:hsl(var(--ds-blue-200))] [--note-filled-border:hsl(var(--ds-blue-100))]\",\n        error:\n          \"text-red-900 border-red-400 selection:bg-red-800 [--note-filled-bg:hsl(var(--ds-red-200))] [--note-filled-border:hsl(var(--ds-red-100))]\",\n        warning:\n          \"text-amber-900 border-amber-400 selection:bg-amber-500 [--note-filled-bg:hsl(var(--ds-amber-200))] [--note-filled-border:hsl(var(--ds-amber-100))]\",\n        violet:\n          \"text-purple-900 border-purple-400 selection:bg-purple-600 [--note-filled-bg:hsl(var(--ds-purple-200))] [--note-filled-border:hsl(var(--ds-purple-100))]\",\n        cyan: \"text-teal-900 border-teal-400 selection:bg-teal-900 [--note-filled-bg:hsl(var(--ds-teal-200))] [--note-filled-border:hsl(var(--ds-teal-100))]\",\n      },\n      size: {\n        small: \"py-1.5 px-2 text-[13px] min-h-[34px]\",\n        medium: \"py-2 px-3 text-sm min-h-[40px]\",\n        large: \"py-[11px] px-3 text-base min-h-[24px]\",\n      },\n    },\n    defaultVariants: {\n      variant: \"secondary\",\n      size: \"medium\",\n    },\n  }\n)\ninterface NoteProps {\n  children: React.ReactNode\n  action?: React.ReactNode\n  size?: VariantProps<typeof noteVariants>[\"size\"]\n  type?: VariantProps<typeof noteVariants>[\"variant\"]\n  fill?: boolean\n  className?: string\n  disabled?: boolean\n}\n\nconst icons = {\n  success: CheckCircle2,\n  error: AlertOctagon,\n  warning: AlertTriangleIcon,\n}\n\nconst Note = ({\n  action,\n  children,\n  size,\n  type = \"secondary\",\n  fill,\n  className,\n  disabled,\n}: NoteProps) => {\n  const Icon = icons[type as keyof typeof icons] ?? InfoIcon\n\n  return (\n    <div\n      className={cn(\n        noteVariants({\n          variant: type,\n          size,\n        }),\n        fill && \"border-[var(--note-filled-border)] bg-[var(--note-filled-bg)]\",\n        disabled &&\n          \"border-gray-alpha-200 text-gray-700 [--note-filled-bg:transparent] [--note-filled-border:var(--ds-gray-alpha-200)]\",\n        className\n      )}\n    >\n      <span className=\"flex items-center gap-3\">\n        <Icon className=\"h-4 w-4 shrink-0\" />\n\n        <span className=\"\">{children}</span>\n      </span>\n      {action && <div className=\"shrink-0\">{action}</div>}\n    </div>\n  )\n}\n\nexport { Note }\n"
    }
  ],
  "type": "components:ui"
}
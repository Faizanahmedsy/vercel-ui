{
  "name": "snippet",
  "files": [
    {
      "name": "snippet.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { Check, Copy } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst snippetVariants = cva(\n  \"max-w-full relative rounded-md border py-2.5 pl-3 pr-12\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background-100 border-gray-alpha-400 text-gray-1000\",\n        dark: \"bg-gray-1000 border-gray-1000 text-gray-100\",\n        success: \"bg-blue-100 border-blue-400 text-blue-900\",\n        error: \"bg-red-100 border-red-400 text-red-900\",\n        warning: \"bg-amber-100 border-amber-400 text-amber-900\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\ninterface SnippetProps {\n  text: string | string[]\n  width?: string\n  onCopy?: () => void\n  type?: VariantProps<typeof snippetVariants>[\"variant\"]\n  prompt?: boolean\n  className?: string\n}\n\nconst Snippet: React.FC<SnippetProps> = ({\n  text,\n  width,\n  prompt = true,\n  onCopy,\n  type = \"default\",\n  className,\n}) => {\n  const textArray = Array.isArray(text) ? text : [text]\n  const [showCopyButton, setShowCopyButton] = React.useState(true)\n\n  function copyTextHandler() {\n    if (showCopyButton === false) return\n\n    setShowCopyButton(false)\n    navigator.clipboard.writeText(textArray.join(\"\\n\\t\")).then(() => {\n      if (onCopy) {\n        onCopy()\n      }\n    })\n\n    setTimeout(() => {\n      setShowCopyButton(true)\n    }, 1200)\n  }\n\n  return (\n    <div\n      className={cn(snippetVariants({ variant: type }), className)}\n      style={{ width }}\n    >\n      <div className=\"flex-1\">\n        {textArray.map((text, index) => (\n          <pre\n            key={index}\n            className={cn(\n              \"overflow-y-auto text-[13px]\",\n              prompt && \"before:select-none before:content-['$_']\"\n            )}\n          >\n            {text}\n          </pre>\n        ))}\n      </div>\n\n      <button\n        onClick={copyTextHandler}\n        className=\"absolute right-1 top-1/2 flex h-8 w-8 -translate-y-1/2 items-center justify-center\"\n      >\n        <div\n          className={cn(\n            \"absolute  duration-150 ease-out fill-mode-forwards\",\n            showCopyButton\n              ? \"animate-copy-button-fadeOut\"\n              : \"animate-copy-button-fadeIn\"\n          )}\n        >\n          <Check className=\"h-4 w-4\" />\n        </div>\n        <div\n          className={cn(\n            \"absolute  duration-150 ease-out fill-mode-forwards\",\n            showCopyButton\n              ? \"animate-copy-button-fadeIn\"\n              : \"animate-copy-button-fadeOut\"\n          )}\n        >\n          <Copy className=\"h-4 w-4\" />\n        </div>\n      </button>\n    </div>\n  )\n}\n\nexport { Snippet }\n"
    }
  ],
  "type": "components:ui"
}
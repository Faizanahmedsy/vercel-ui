{
  "name": "tooltip",
  "dependencies": [
    "@radix-ui/react-tooltip"
  ],
  "files": [
    {
      "name": "tooltip.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tooltip = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content> & {\n    text: string | React.ReactNode\n  }\n>(({ className, sideOffset = 5, text, children, ...props }, ref) => (\n  <TooltipPrimitive.Provider>\n    <TooltipPrimitive.Root>\n      <TooltipPrimitive.Trigger asChild>{children}</TooltipPrimitive.Trigger>\n      <TooltipPrimitive.Portal>\n        <TooltipPrimitive.Content\n          ref={ref}\n          sideOffset={sideOffset}\n          className={cn(\n            \"z-50 overflow-hidden rounded-md text-[13px] border border-contrast bg-contrast text-gray-100 px-3 py-2 shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n            className\n          )}\n          {...props}\n        >\n          <p>{text}</p>\n          <TooltipPrimitive.Arrow className=\"fill-contrast\" />\n        </TooltipPrimitive.Content>\n      </TooltipPrimitive.Portal>\n    </TooltipPrimitive.Root>\n  </TooltipPrimitive.Provider>\n))\nTooltip.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip }\n"
    }
  ],
  "type": "components:ui"
}
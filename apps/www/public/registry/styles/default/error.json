{
  "name": "error",
  "files": [
    {
      "name": "error.tsx",
      "content": "import React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { AlertOctagonIcon, ExternalLinkIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst errorVariants = cva(\"flex items-start text-red-900\", {\n  variants: {\n    size: {\n      small: \"text-[13px] leading-5 [--error-icon-mt:2px]\",\n      medium: \"text-sm [--error-icon-mt:2px]\",\n      large: \"text-base [--error-icon-mt:4px]\",\n    },\n  },\n  defaultVariants: {\n    size: \"medium\",\n  },\n})\n\ninterface ErrorPropsBasics extends VariantProps<typeof errorVariants> {\n  label?: string\n}\n\ninterface ErrorPropsWithChildren extends ErrorPropsBasics {\n  children: React.ReactNode\n  error?: never\n}\n\ninterface ErrorPropsWithProperty extends ErrorPropsBasics {\n  error: {\n    message: string\n    action: string\n    link: string\n  }\n  children?: never\n}\n\ntype ErrorProps = ErrorPropsWithChildren | ErrorPropsWithProperty\n\nconst Error: React.FC<ErrorProps> = ({\n  size = \"medium\",\n  label,\n  error,\n  children,\n}) => {\n  return (\n    <div className={cn(errorVariants({ size }))}>\n      <div className=\"mr-2 mt-[var(--error-icon-mt)]\">\n        <AlertOctagonIcon className=\"h-4 w-4\" />\n      </div>\n      <p className=\"[word-break:break-word]\">\n        {label && <b className=\"mr-2 font-medium\">{label}:</b>}\n\n        {error ? (\n          <>\n            {error.message}\n            <a\n              href={error.link}\n              className=\"ml-1 inline-flex items-center gap-0.5 bg-gradient-to-t from-current to-current bg-no-repeat font-medium [background-position:0_100%] [background-size:100%_1px] hover:opacity-60\"\n            >\n              {error.action}\n              <ExternalLinkIcon className=\"ml-0.5 h-[14px] w-[14px]\" />\n            </a>\n          </>\n        ) : (\n          children\n        )}\n      </p>\n    </div>\n  )\n}\n\nexport { Error }\n"
    }
  ],
  "type": "components:ui"
}